//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using GameWarden.Chess.Notations;


[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("CHESSDBModel", "FK", "Games", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GameWarden.Chess.DBGame), "GameStates", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GameWarden.Chess.DBGameState), true)]

#endregion

namespace GameWarden.Chess
{
    #region Contexts



    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ChessEntities : ObjectContext
    {
        #region Constructors



        /// <summary>
        /// Initializes a new ChessEntities object using the connection string found in the 'ChessEntities' section of the application configuration file.
        /// </summary>
        public ChessEntities()
            : base("name=ChessEntities", "ChessEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }



        /// <summary>
        /// Initialize a new ChessEntities object.
        /// </summary>
        public ChessEntities(string connectionString)
            : base(connectionString, "ChessEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }



        /// <summary>
        /// Initialize a new ChessEntities object.
        /// </summary>
        public ChessEntities(EntityConnection connection)
            : base(connection, "ChessEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }



        #endregion



        #region Partial Methods



        partial void OnContextCreated();



        #endregion



        #region ObjectSet Properties



        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DBGame> Games
        {
            get
            {
                if ((_Games == null))
                {
                    _Games = base.CreateObjectSet<DBGame>("Games");
                }
                return _Games;
            }
        }
        private ObjectSet<DBGame> _Games;



        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DBGameState> GameStates
        {
            get
            {
                if ((_GameStates == null))
                {
                    _GameStates = base.CreateObjectSet<DBGameState>("GameStates");
                }
                return _GameStates;
            }
        }
        private ObjectSet<DBGameState> _GameStates;

        #endregion
        #region AddTo Methods



        /// <summary>
        /// Deprecated Method for adding a new object to the Games EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGames(DBGame dBGame)
        {
            base.AddObject("Games", dBGame);
        }



        /// <summary>
        /// Deprecated Method for adding a new object to the GameStates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGameStates(DBGameState dBGameState)
        {
            base.AddObject("GameStates", dBGameState);
        }

        #endregion
    }




    #endregion



    #region Entities



    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "CHESSDBModel", Name = "DBGame")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class DBGame : EntityObject
    {
        #region Factory Method


        private ChessGame TheGame;
        public ChessGame Game
        {
            get { return TheGame; }
        }

        public DBGame()
        {
            TheGame = new ChessGame();
        }

        public DBGame(ChessGame game)
        {
            TheGame = game;
        }


        /// <summary>
        /// Create a new DBGame object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static DBGame CreateDBGame(global::System.Int32 id, ChessGame game)
        {
            DBGame dBGame = new DBGame(game);
            dBGame.ID = id;
            return dBGame;
        }

        #endregion
        #region Primitive Properties



        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
        
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Event
        {
            get
            {
                return TheGame.Info["Event"];

            }
            set
            {
                OnEventChanging(value);
                ReportPropertyChanging("Event");
                TheGame.Info["Event"] = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Event");
                OnEventChanged();
            }
        }
        partial void OnEventChanging(global::System.String value);
        partial void OnEventChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Site
        {
            get
            {
                return TheGame.Info["Site"];

            }
            set
            {
                OnSiteChanging(value);
                ReportPropertyChanging("Site");
                TheGame.Info["Site"] = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Site");
                OnSiteChanged();
            }
        }
        partial void OnSiteChanging(global::System.String value);
        partial void OnSiteChanged();



        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Date
        {
            get
            {
                return TheGame.Info["Date"];

            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                TheGame.Info["Date"] = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        partial void OnDateChanging(global::System.String value);
        partial void OnDateChanged();



        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Round
        {
            get
            {
                return TheGame.Info["Round"];

            }
            set
            {
                OnRoundChanging(value);
                ReportPropertyChanging("Round");
                TheGame.Info["Round"] = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Round");
                OnRoundChanged();
            }
        }
        partial void OnRoundChanging(global::System.String value);
        partial void OnRoundChanged();



        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String White
        {
            get
            {
                return TheGame.Info["White"];

            }
            set
            {
                OnWhiteChanging(value);
                ReportPropertyChanging("White");
                TheGame.Info["White"] = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("White");
                OnWhiteChanged();
            }
        }
        partial void OnWhiteChanging(global::System.String value);
        partial void OnWhiteChanged();



        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Black
        {
            get
            {
                return TheGame.Info["Black"];

            }
            set
            {
                OnBlackChanging(value);
                ReportPropertyChanging("Black");
                TheGame.Info["Black"] = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Black");
                OnBlackChanged();
            }
        }
        partial void OnBlackChanging(global::System.String value);
        partial void OnBlackChanged();
        
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Result
        {
            get
            {
                return TheGame.Info["Result"];

            }
            set
            {
                OnResultChanging(value);
                ReportPropertyChanging("Result");
                TheGame.Info["Result"] = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Result");
                OnResultChanged();
            }
        }
        partial void OnResultChanging(global::System.String value);
        partial void OnResultChanged();
        
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Moves
        {
            get
            {
                return new PGNParser().GenerateMovetext(TheGame);
            }
            set
            {
                OnMovesChanging(value);
                ReportPropertyChanging("Moves");
                _Moves = StructuralObject.SetValidValue(value, true);
                if (_Moves != null)
                    foreach (ChessMove m in new PGNParser().ParseMoves(_Moves, TheGame.Players))
                        TheGame.AddMove(m);
                ReportPropertyChanged("Moves");
                OnMovesChanged();
            }
        }
        private global::System.String _Moves;
        partial void OnMovesChanging(global::System.String value);
        partial void OnMovesChanged();

        public override string ToString()
        {
            return TheGame.ToString();
        }

        #endregion



        #region Navigation Properties



        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CHESSDBModel", "FK", "GameStates")]
        public EntityCollection<DBGameState> GameStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DBGameState>("CHESSDBModel.FK", "GameStates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DBGameState>("CHESSDBModel.FK", "GameStates", value);
                }
            }
        }

        #endregion
    }



    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "CHESSDBModel", Name = "DBGameState")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class DBGameState : EntityObject
    {
        #region Factory Method



        /// <summary>
        /// Create a new DBGameState object.
        /// </summary>
        /// <param name="game">Initial value of the Game property.</param>
        /// <param name="num">Initial value of the Num property.</param>
        public static DBGameState CreateDBGameState(global::System.Int32 game, global::System.Int32 num)
        {
            DBGameState dBGameState = new DBGameState();
            dBGameState.Game = game;
            dBGameState.Num = num;
            return dBGameState;
        }

        #endregion
        #region Primitive Properties



        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Game
        {
            get
            {
                return _Game;
            }
            set
            {
                if (_Game != value)
                {
                    OnGameChanging(value);
                    ReportPropertyChanging("Game");
                    _Game = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Game");
                    OnGameChanged();
                }
            }
        }
        private global::System.Int32 _Game;
        partial void OnGameChanging(global::System.Int32 value);
        partial void OnGameChanged();



        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Num
        {
            get
            {
                return _Num;
            }
            set
            {
                if (_Num != value)
                {
                    OnNumChanging(value);
                    ReportPropertyChanging("Num");
                    _Num = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Num");
                    OnNumChanged();
                }
            }
        }
        private global::System.Int32 _Num;
        partial void OnNumChanging(global::System.Int32 value);
        partial void OnNumChanged();



        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String FEN
        {
            get
            {
                return _FEN;
            }
            set
            {
                OnFENChanging(value);
                ReportPropertyChanging("FEN");
                _FEN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FEN");
                OnFENChanged();
            }
        }
        private global::System.String _FEN;
        partial void OnFENChanging(global::System.String value);
        partial void OnFENChanged();

        #endregion



        #region Navigation Properties



        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CHESSDBModel", "FK", "Games")]
        public DBGame Games
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DBGame>("CHESSDBModel.FK", "Games").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DBGame>("CHESSDBModel.FK", "Games").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DBGame> GamesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DBGame>("CHESSDBModel.FK", "Games");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DBGame>("CHESSDBModel.FK", "Games", value);
                }
            }
        }

        #endregion
    }

    #endregion



}
